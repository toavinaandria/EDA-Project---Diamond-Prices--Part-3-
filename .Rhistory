theme_gray()+
scale_fill_brewer(type = 'qual', palette = 'Ascent')
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
library(ggplot2)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 500)+
facet_wrap(~color)+
theme_gray()+
scale_fill_brewer(type = 'qual', palette = 'Ascent')
summary(diamonds$price)
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
library(ggplot2)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 500)+
facet_wrap(~color)+
theme_gray()+
scale_fill_brewer(type = 'qual', palette = 'Ascent')+
scale_x_continuous(limits = c(300,15000))
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
library(ggplot2)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 500)+
facet_wrap(~color, scales = "free_y")+
theme_gray()+
scale_fill_brewer(type = 'qual', palette = 'Ascent')+
scale_x_continuous(limits = c(300,15000))
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
library(ggplot2)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 500)+
facet_wrap(~color, scales = "free_y")+
scale_fill_brewer(type = 'qual', palette = 'Ascent')+
scale_x_continuous(limits = c(300,15000))
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
library(ggplot2)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 100)+
facet_wrap(~color, scales = "free_y")+
scale_fill_brewer(type = 'qual', palette = 'Ascent')+
scale_x_continuous(limits = c(300,15000))
summary(diamonds$price)
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
library(ggplot2)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 100)+
facet_wrap(~color, scales = "free_y")+
scale_fill_brewer(type = 'qual', palette = 'Ascent')+
scale_x_continuous(limits = c(900,12000))
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
library(ggplot2)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 500)+
facet_wrap(~color, scales = "free_y")+
scale_fill_brewer(type = 'qual', palette = 'Ascent')+
scale_x_continuous(limits = c(900,12000))
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
library(ggplot2)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 500)+
facet_wrap(~color, scales = "free_y")+
scale_fill_brewer(type = 'qual', palette = 'Ascent')
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
library(ggplot2)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 500)+
facet_wrap(~color, scales = "free_y")+
scale_fill_brewer(type = 'qual', palette = 'Accent')
str(diamonds)
ggplot(data = diamonds, (x = table, y = price))+
geom_point()
ggplot(data = diamonds, (x = table, y = price))+
geom_point()
ggplot(data = diamonds, (x = table, y = price))+
geom_point()
ggplot(data = diamonds, aes(x = table, y = price))+
geom_point()
ggplot(data = diamonds, aes(x = table, y = price, fill = cut))+
geom_point(alpha = 1/20)
ggplot(data = diamonds, aes(x = table, y = price))+
geom_point(alpha = 1/20, color = cut)
ggplot(data = diamonds, aes(x = table, y = price))+
geom_point(alpha = 1/20, color = cut)
ggplot(data = diamonds, aes(x = table, y = price))+
geom_point(alpha = 1/20)
ggplot(data = diamonds, aes(x = table, y = price, color = cut)+
geom_point(alpha = 1/20)
ggplot(data = diamonds, aes(x = table, y = price, color = cut))+
geom_point(alpha = 1/20)
ggplot(data = diamonds, aes(x = table, y = price, color = cut))+
geom_point(alpha = 1/20)
ggplot(data = diamonds, aes(x = table, y = price, color = cut))+
geom_point(alpha = 1/5)
ggplot(data = diamonds, aes(x = table, y = price, color = cut))+
geom_point(alpha = 1/5)+
scale_color_brewer(type = 'qual', palette = 'Accent')
ggplot(data = diamonds, aes(x = table, y = price, color = cut))+
geom_point(alpha = 1/2)+
scale_color_brewer(type = 'qual', palette = 'Accent')
ggplot(data = diamonds, aes(x = table, y = price, color = cut))+
geom_point(alpha = 1/2)+
scale_color_brewer(type = 'qual', palette = 'Accent')+
scale_x_continuous(limits=c(50,80))
summary(diamonds$table)
#Note - I'm not showing outliers in the chart
ggplot(data = diamonds, aes(x = table, y = price, color = cut))+
geom_point(alpha = 1/2)+
scale_color_brewer(type = 'qual', palette = 'Accent')+
scale_x_continuous(limits=c(50,80), breaks = seq(50,80,2))
names(diamonds)
diamonds$volume <- x*y*z
diamonds$volume <- with(diamonds, x*y*z)
names(diamonds)
head(diamonds)
3.95*3.98*2.43
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = diamonds,
aes(x = volume, y = price, color = clarity))+
geom_point()
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99),
aes(x = volume, y = price, color = clarity))+
geom_point()
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99),
aes(x = volume, y = price, color = clarity))+
geom_point()+
scale_y_log10()
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99),
aes(x = volume, y = price, color = clarity))+
geom_point()+
scale_y_log10()
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99),
aes(x = volume, y = price, color = clarity))+
geom_point()+
scale_y_continuous(trans = "log10")
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99),
aes(x = volume, y = price, color = clarity))+
geom_point()+
scale_y_continuous(trans = "log10")
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99)),
aes(x = volume, y = price, color = clarity))+
geom_point()+
scale_y_continuous(trans = "log10")
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99)),
aes(x = volume, y = price, color = clarity))+
geom_point()+
scale_y_continuous(trans = "log10")
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99)),
aes(x = volume, y = price, color = clarity))+
geom_point()+
scale_y_continuous(trans = "log10")
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99)),
aes(x = volume, y = price, color = clarity))+
geom_point()+
scale_y_continuous(trans = "log10")
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99)),
aes(x = volume, y = price, color = clarity))+
geom_point(alpha = 1/20)+
scale_y_continuous(trans = "log10")
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99)),
aes(x = volume, y = price, color = clarity))+
geom_point(alpha = 1/3)+
scale_y_continuous(trans = "log10")+
scale_color_brewr(type = 'div')
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99)),
aes(x = volume, y = price, color = clarity))+
geom_point(alpha = 1/3)+
scale_y_continuous(trans = "log10")+
scale_color_brewer(type = 'div')
diamonds$volume <- with(diamonds, x*y*z)
ggplot(data = subset(diamonds, volume < quantile(diamonds$volume, probs = 0.99)),
aes(x = volume, y = price, color = clarity))+
geom_point(alpha = 0.75)+
scale_y_continuous(trans = "log10")+
scale_color_brewer(type = 'div')
pf <- read.delim('pseudo_facebook.tsv')
heads(pf)
head(pf)
names(pf)
pf <- read.delim('pseudo_facebook.tsv')
pf$prop_initiated <- pf$friendships_initiated / pf$friend_count
summary(pf$prop_initiated)
?geom_line
# Create the year joined bucket variable
pf$year_joined <- floor(2014 - pf$tenure/365)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014))
ggplot(data = pf,
aes(x = tenure, y = prop_initiated, color = year_joined.bucket))+
geom_line(stat = 'median')
# Create the year joined bucket variable
pf$year_joined <- floor(2014 - pf$tenure/365)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014))
ggplot(data = pf,
aes(x = tenure, y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
# Create the year joined bucket variable
pf$year_joined <- floor(2014 - pf$tenure/365)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure, y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
# Create the year joined bucket variable
pf$year_joined <- floor(2014 - pf$tenure/365)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure, y = prop_initiated))+
geom_smooth(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
# Create the year joined bucket variable
pf$year_joined <- floor(2014 - pf$tenure/365)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure, y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure, y = prop_initiated))+
geom_smooth(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure, y = prop_initiated))+
geom_smooth(stat = 'summary', fun.y = median, aes(color = year_joined.bucket), method = lm)
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure, y = prop_initiated))+
geom_smooth(stat = 'summary', fun.y = median, aes(color = year_joined.bucket), method = glm)
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = 30* (tenure/30), y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = 90* (tenure/90), y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = 360 * (tenure/ 360), y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure), y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure), y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure), y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure), y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure), y = prop_initiated))+
geom_smooth(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure), y = prop_initiated)+
geom_smooth(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
# Create the year joined bucket variable
pf$year_joined <- floor(2014 - pf$tenure/365)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure, y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure), y = prop_initiated)+
geom_smooth(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure), y = prop_initiated)+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure, y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = tenure, y = prop_initiated))+
geom_smooth(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = 90*(tenure/90), y = prop_initiated))+
geom_smooth(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = 360*(tenure/360), y = prop_initiated))+
geom_smooth(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = 360*(tenure/360), y = prop_initiated))+
geom_point(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = 360*round(tenure/360), y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = 90*round(tenure/360), y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = 90*round(tenure/90), y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated)),
aes(x = 7*round(tenure/7), y = prop_initiated))+
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
?summarise
pf %>% group_by(year_joined.bucket) %>%
summary(prop_initiated)
?by
by(pf, pf$year_joined.bucket, mean(prop_initiated))
by(pf, pf$year_joined.bucket, mean(pf$prop_initiated))
pf %>%
group_by(year_joined.bucket) %>%
summarise_each(funs(mean(prop_initiated)))
pf %>%
group_by(year_joined.bucket) %>%
summarise_each(funs(mean(prop_initiated, na.rm = TRUE)))
by(data = pf, pf$year_joined.bucket, funs(mean(prop_initiated, na.rm = TRUE)))
by(data = pf, year_joined.bucket, summary)
by(data = pf, pf$year_joined.bucket, summary)
by(pf$year_joined.bucket, pf$prop_initiated, summary)
by(pf$year_joined.bucket, pf$prop_initiated, summary)
by(data = pf, pf$year_joined.bucket, summary)
by(data = pf, pf$year_joined.bucket, summary(pf$prop_initiated))
by(data = pf, pf$year_joined.bucket, summary)
pf %>%
select(year_joined.bucket, prop_initiated) %>%
filter(!is.na(prop_initiated)) %>%
group_by(year_joined.bucket) %>%
summarise_each(funs(mean))
ggplot(data = diamonds,
aes( x = cut, y = price / carat))+
geom_point()
ggplot(data = diamonds,
aes( x = cut, y = price / carat, color = color))+
geom_point()+
facet_wrap(~clarity)
ggplot(data = diamonds,
aes( x = cut, y = price / carat, color = color))+
geom_jitter()+
facet_wrap(~clarity)
ggplot(data = diamonds,
aes( x = cut, y = price / carat, color = color))+
geom_jitter()+
facet_wrap(~clarity)+
scale_color_brewer(type = 'div')
pf %>%
select(year_joined.bucket, prop_initiated) %>%
filter(!is.na(prop_initiated)) %>%
group_by(year_joined.bucket) %>%
summarise_each(funs(mean))
pf %>%
select(year_joined.bucket, prop_initiated) %>%
filter(!is.na(prop_initiated)) %>%
group_by(year_joined.bucket) %>%
summarise(average = mean(prop_initiated))
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
library(ggplot2)
library(dplyr)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 500)+
facet_wrap(~color, scales = "free_y")+
scale_fill_brewer(type = 'qual', palette = 'Accent')
# Note - I'm assuming that the relevant libraries are already loaded by preceding code
library(tidyr)
## Load data into dataframes
GDP <- read.csv("GDPpercapitaconstant2000US.csv")
BMI <- read.csv("Indicator_BMI male ASM.csv")
GDP <- tbl_df(GDP)
BMI <- tbl_df(BMI)
## Tidy the BMI data by creating a date column
BMI <- BMI %>%
gather(Year, value = BMI, -Country) %>%
mutate(Year = as.numeric(substr(Year,2,5)))
## Tidy the GDP data by creating a data column
GDP <- GDP %>%
rename(Country = Income.per.person..fixed.2000.US..) %>%
gather(Year, value = GDP, -Country) %>%
mutate(Year = as.numeric(substr(Year,2,5)))
## Merge the data together
BMI_GDP <- inner_join(BMI,GDP, by=c("Country","Year"))
## Delete empty observations
BMI_GDP <- BMI_GDP %>%
filter(!is.na(GDP))
View(BMI_GPD)
View(BMI_GDP)
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/20)
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/20)+
guides(fill = FALSE)
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/20)+
theme(legend.position = "none")
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/20)+
theme(legend.position = "none")+
scale_color_brewer(type = 'div')
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/2)+
theme(legend.position = "none")+
scale_color_brewer(type = 'div')
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/2)+
theme(legend.position = "none")
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/2)+
theme(legend.position = "none")+
scale_color_brewer(type = 'div' palette = 'BrBG')
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/2)+
theme(legend.position = "none")+
scale_color_brewer(type = 'div', palette = 'BrBG')
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/2)+
theme(legend.position = "none")+
scale_color_brewer(type = 'seq', palette = 'Blues')
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/2)+
theme(legend.position = "none")
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/2)+
scale_x_continuous(breaks = c(0,70000,5000), limits = c(50,15000))
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/2)+
scale_x_continuous(breaks = c(0,70000,5000), limits = c(50,15000))+
theme(legend.position = "none")
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Year))+
geom_point(alpha = 1/2)+
theme(legend.position = "none")
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/2)+
scale_x_continuous(breaks = c(0,70000,5000), limits = c(50,15000))+
theme(legend.position = "none")
ggplot(data = BMI_GDP, aes(x = log10(GDP), y = BMI, color = Country))+
geom_point(alpha = 1/20)+
scale_x_continuous(breaks = c(0,70000,5000))+
geom_smooth(method = "lm", color = 'red')
ggplot(data = BMI_GDP, aes(x = log10(GDP), y = BMI, color = Country))+
geom_point(alpha = 1/20)+
scale_x_continuous(breaks = c(0,70000,5000))+
geom_smooth(method = "lm", color = 'red')+
theme(legend.position = "none")
ggplot(data = BMI_GDP, aes(x = log10(GDP), y = BMI, color = Country))+
geom_point(alpha = 1/2)+
scale_x_continuous(breaks = c(0,70000,5000))+
geom_smooth(method = "lm", color = 'red')+
theme(legend.position = "none")
ggplot(data = BMI_GDP, aes(x = GDP, y = BMI, color = Country))+
geom_point(alpha = 1/2)+
scale_x_continuous(breaks = c(0,70000,5000), limits = c(50,15000))+
theme(legend.position = "none")
ggplot(data = BMI_GDP, aes(x = log10(GDP), y = BMI, color = Country))+
geom_point(alpha = 1/2)+
scale_x_continuous(breaks = c(0,70000,5000))+
geom_smooth(method = "lm", color = 'red')+
theme(legend.position = "none")
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
#install.packages(ggplot2) #<- Unquote if dplyr is not installed
library(ggplot2)
library(dplyr)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = log10(price), fill = cut))+
geom_histogram(binwidth = 500)+
facet_wrap(~color, scales = "free_y")+
scale_fill_brewer(type = 'qual', palette = 'Accent')
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
#install.packages(ggplot2) #<- Unquote if dplyr is not installed
library(ggplot2)
library(dplyr)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 500)+
facet_wrap(~color, scales = "free_y")+
scale_fill_brewer(type = 'qual', palette = 'Accent')
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
#install.packages(ggplot2) #<- Unquote if dplyr is not installed
library(ggplot2)
library(dplyr)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram(binwidth = 500)+
facet_wrap(~color, scales = "free_y")+
scale_fill_brewer(type = 'qual', palette = 'Accent')+
scale_x_log10()
#install.packages(ggplot2) #<- Unquote if ggplot2 is not installed
#install.packages(ggplot2) #<- Unquote if dplyr is not installed
library(ggplot2)
library(dplyr)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price, fill = cut))+
geom_histogram()+
facet_wrap(~color, scales = "free_y")+
scale_fill_brewer(type = 'qual', palette = 'Accent')+
scale_x_log10()
